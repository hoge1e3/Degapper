<program>//#include&lt;stdio.h&gt;
<translation_unit><function_definition><int>int</int> <direct_declarator><IDENT>main</IDENT><LEFT_PAR>(</LEFT_PAR><void>void</void><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
   <declaration><char>char</char> <init_declarator><direct_declarator><IDENT>name</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><number>10</number><RIGHT_BRACKET>]</RIGHT_BRACKET></direct_declarator>=<literal>"YAMADA"</literal></init_declarator><SEMICOLON>;</SEMICOLON></declaration>
   <expression_statement><postfix_expression><IDENT>printf</IDENT> <LEFT_PAR>(</LEFT_PAR><argument_expression_list><literal>"You name is %s.\n"</literal>,<IDENT>name</IDENT></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>

   <declaration><int>int</int> <IDENT>i</IDENT><SEMICOLON>;</SEMICOLON></declaration>
   <for_statement><for>for</for> <LEFT_PAR>(</LEFT_PAR><assignment_expression><IDENT>i</IDENT><ASSIGN>=</ASSIGN><number>0</number></assignment_expression> <SEMICOLON>;</SEMICOLON> <relational_expression><IDENT>i</IDENT><LT>&lt;</LT><number>10</number></relational_expression> <SEMICOLON>;</SEMICOLON> <postfix_expression><IDENT>i</IDENT>++</postfix_expression><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
       <expression_statement><postfix_expression><IDENT>printf</IDENT> <LEFT_PAR>(</LEFT_PAR><argument_expression_list><literal>"name[%d]= %d\n"</literal>, <IDENT>i</IDENT>,<postfix_expression><IDENT>name</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
   <RIGHT_CURL>}</RIGHT_CURL></compound_statement></for_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>


</translation_unit></program>