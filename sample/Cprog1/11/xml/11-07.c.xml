<program>//#include&lt;stdio.h&gt;
<translation_unit><function_definition><int>int</int> <direct_declarator><IDENT>main</IDENT> <LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
  <expression_statement><multiplicative_expression><IDENT>FILE</IDENT> <MUL>*</MUL><IDENT>fp</IDENT></multiplicative_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <declaration><int>int</int> <IDENT>data</IDENT><SEMICOLON>;</SEMICOLON></declaration>
  <expression_statement><assignment_expression><IDENT>fp</IDENT><ASSIGN>=</ASSIGN><postfix_expression><IDENT>fopen</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><literal>"hello.txt"</literal>,<literal>"r"</literal></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><postfix_expression><IDENT>fscanf</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><IDENT>fp</IDENT>, <literal>"%d"</literal>, <prefix_expression><unary_operator>&amp;</unary_operator><IDENT>data</IDENT></prefix_expression></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><postfix_expression><IDENT>printf</IDENT> <LEFT_PAR>(</LEFT_PAR><argument_expression_list><literal>"%d"</literal>,<IDENT>data</IDENT></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><postfix_expression><IDENT>fclose</IDENT><LEFT_PAR>(</LEFT_PAR><IDENT>fp</IDENT><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>

</translation_unit></program>