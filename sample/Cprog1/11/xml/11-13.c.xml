<program>//#include&lt;stdio.h&gt;
<translation_unit><function_definition><int>int</int> <direct_declarator><IDENT>main</IDENT><LEFT_PAR>(</LEFT_PAR><void>void</void><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
  <declaration><int>int</int> <IDENT>i</IDENT><SEMICOLON>;</SEMICOLON></declaration>
  <declaration><int>int</int> <init_declarator><direct_declarator><IDENT>rank</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><number>5</number><RIGHT_BRACKET>]</RIGHT_BRACKET></direct_declarator>=<initializer><LEFT_CURL>{</LEFT_CURL><initializer_list><number>20</number>,<number>10</number>,<number>8</number>,<number>5</number>,<number>2</number></initializer_list><RIGHT_CURL>}</RIGHT_CURL></initializer></init_declarator><SEMICOLON>;</SEMICOLON></declaration>
  <expression_statement><multiplicative_expression><IDENT>FILE</IDENT><MUL>*</MUL> <IDENT>fp</IDENT></multiplicative_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><assignment_expression><IDENT>fp</IDENT><ASSIGN>=</ASSIGN><postfix_expression><IDENT>fopen</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><literal>"rank.txt"</literal>, <literal>"w"</literal></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <for_statement><for>for</for> <LEFT_PAR>(</LEFT_PAR><assignment_expression><IDENT>i</IDENT><ASSIGN>=</ASSIGN><number>0</number></assignment_expression> <SEMICOLON>;</SEMICOLON> <relational_expression><IDENT>i</IDENT><LT>&lt;</LT><number>5</number></relational_expression> <SEMICOLON>;</SEMICOLON> <postfix_expression><IDENT>i</IDENT>++</postfix_expression><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
     <expression_statement><postfix_expression><IDENT>fprintf</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><IDENT>fp</IDENT>, <literal>"%d\n"</literal>, <postfix_expression><IDENT>rank</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <RIGHT_CURL>}</RIGHT_CURL></compound_statement></for_statement>
  <expression_statement><postfix_expression><IDENT>fclose</IDENT><LEFT_PAR>(</LEFT_PAR><IDENT>fp</IDENT><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>

</translation_unit></program>