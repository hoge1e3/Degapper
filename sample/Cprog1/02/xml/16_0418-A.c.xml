<program>
<translation_unit><function_definition><int>int</int> <direct_declarator><IDENT>main</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
  <declaration><int>int</int> <init_declarator_list><IDENT>i</IDENT>,<IDENT>j</IDENT>,<IDENT>r</IDENT>,<IDENT>c</IDENT></init_declarator_list><SEMICOLON>;</SEMICOLON></declaration>
  <expression_statement><postfix_expression><IDENT>printf</IDENT><LEFT_PAR>(</LEFT_PAR><literal>"r=?"</literal><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><postfix_expression><IDENT>scanf</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><literal>"%d"</literal>,<prefix_expression><unary_operator>&amp;</unary_operator><IDENT>r</IDENT></prefix_expression></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><postfix_expression><IDENT>printf</IDENT><LEFT_PAR>(</LEFT_PAR><literal>"c=?"</literal><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><postfix_expression><IDENT>scanf</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><literal>"%d"</literal>,<prefix_expression><unary_operator>&amp;</unary_operator><IDENT>c</IDENT></prefix_expression></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><postfix_expression><IDENT>drawGrid</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <for_statement><for>for</for> <LEFT_PAR>(</LEFT_PAR><assignment_expression><IDENT>i</IDENT><ASSIGN>=</ASSIGN><number>0</number></assignment_expression> <SEMICOLON>;</SEMICOLON> <relational_expression><IDENT>i</IDENT><LT>&lt;</LT><IDENT>r</IDENT></relational_expression> <SEMICOLON>;</SEMICOLON> <postfix_expression><IDENT>i</IDENT>++</postfix_expression><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
  <for_statement><for>for</for> <LEFT_PAR>(</LEFT_PAR><assignment_expression><IDENT>j</IDENT><ASSIGN>=</ASSIGN><number>0</number></assignment_expression> <SEMICOLON>;</SEMICOLON> <relational_expression><IDENT>j</IDENT><LT>&lt;</LT><IDENT>c</IDENT></relational_expression> <SEMICOLON>;</SEMICOLON> <postfix_expression><IDENT>j</IDENT>++</postfix_expression><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
     <expression_statement><postfix_expression><IDENT>fillRect</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><multiplicative_expression><IDENT>j</IDENT><MUL>*</MUL><number>20</number></multiplicative_expression>, <multiplicative_expression><IDENT>i</IDENT><MUL>*</MUL><number>20</number></multiplicative_expression>,<number>10</number>,<number>10</number></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement> 
  <RIGHT_CURL>}</RIGHT_CURL></compound_statement></for_statement><RIGHT_CURL>}</RIGHT_CURL></compound_statement></for_statement>
  <expression_statement><postfix_expression><IDENT>wait</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>

</translation_unit></program>