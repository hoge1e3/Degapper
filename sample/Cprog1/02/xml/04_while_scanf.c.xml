<program>//#include&lt;stdio.h&gt;
<translation_unit><function_definition><int>int</int> <direct_declarator><IDENT>main</IDENT><LEFT_PAR>(</LEFT_PAR><void>void</void><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
   <declaration><int>int</int> <init_declarator_list><IDENT>x</IDENT>,<IDENT>n</IDENT></init_declarator_list><SEMICOLON>;</SEMICOLON></declaration>
   <expression_statement><postfix_expression><IDENT>printf</IDENT><LEFT_PAR>(</LEFT_PAR><literal>"繰り返す回数? "</literal><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
   <expression_statement><postfix_expression><IDENT>scanf</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><literal>"%d"</literal>,<prefix_expression><unary_operator>&amp;</unary_operator><IDENT>n</IDENT></prefix_expression></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
   <expression_statement><assignment_expression><IDENT>x</IDENT><ASSIGN>=</ASSIGN><number>1</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
   <while_statement><while>while</while><LEFT_PAR>(</LEFT_PAR><relational_expression><IDENT>x</IDENT><LE>&lt;=</LE><IDENT>n</IDENT></relational_expression><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>     
       <expression_statement><postfix_expression><IDENT>printf</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><literal>"%d * %d = %d\n"</literal>, <IDENT>x</IDENT>, <IDENT>x</IDENT>, <multiplicative_expression><IDENT>x</IDENT><MUL>*</MUL><IDENT>x</IDENT></multiplicative_expression></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
       <expression_statement><assignment_expression><IDENT>x</IDENT><ASSIGN>=</ASSIGN><additive_expression><IDENT>x</IDENT><PLUS>+</PLUS><number>1</number></additive_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
   <RIGHT_CURL>}</RIGHT_CURL></compound_statement></while_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>

</translation_unit></program>