<program>//#include"x.h"
<translation_unit><declaration><void>void</void> <direct_declarator><IDENT>move</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></direct_declarator><SEMICOLON>;</SEMICOLON></declaration>
<declaration><void>void</void> <direct_declarator><IDENT>move2</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></direct_declarator><SEMICOLON>;</SEMICOLON></declaration>
<declaration><int>int</int> <direct_declarator><IDENT>main</IDENT><LEFT_PAR>(</LEFT_PAR><void>void</void><RIGHT_PAR>)</RIGHT_PAR></direct_declarator><SEMICOLON>;</SEMICOLON></declaration>
<declaration><float>float</float> <init_declarator_list><IDENT>x</IDENT>,<IDENT>y</IDENT>,<IDENT>vx</IDENT>,<IDENT>vy</IDENT></init_declarator_list><SEMICOLON>;</SEMICOLON></declaration>
<declaration><float>float</float> <init_declarator_list><IDENT>x2</IDENT>,<IDENT>y2</IDENT>,<IDENT>vx2</IDENT>,<IDENT>vy2</IDENT></init_declarator_list><SEMICOLON>;</SEMICOLON></declaration>

<function_definition><int>int</int> <direct_declarator><IDENT>main</IDENT><LEFT_PAR>(</LEFT_PAR><void>void</void><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
  <expression_statement><postfix_expression><IDENT>setColor</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><number>255</number>,<number>0</number>,<number>0</number></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><assignment_expression><IDENT>x</IDENT><ASSIGN>=</ASSIGN><number>0</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement> <expression_statement><assignment_expression><IDENT>y</IDENT><ASSIGN>=</ASSIGN><number>50</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement> <expression_statement><assignment_expression><IDENT>vx</IDENT><ASSIGN>=</ASSIGN><number>2</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement> <expression_statement><assignment_expression><IDENT>vy</IDENT><ASSIGN>=</ASSIGN><number>1</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><assignment_expression><IDENT>x2</IDENT><ASSIGN>=</ASSIGN><number>100</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement> <expression_statement><assignment_expression><IDENT>y2</IDENT><ASSIGN>=</ASSIGN><number>120</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement> <expression_statement><assignment_expression><IDENT>vx2</IDENT><ASSIGN>=</ASSIGN><number>2</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement> <expression_statement><assignment_expression><IDENT>vy2</IDENT><ASSIGN>=</ASSIGN><number>1</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <while_statement><while>while</while> <LEFT_PAR>(</LEFT_PAR><number>1</number><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
     <expression_statement><postfix_expression><IDENT>clear</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><postfix_expression><IDENT>move</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><postfix_expression><IDENT>move2</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><postfix_expression><IDENT>update</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <RIGHT_CURL>}</RIGHT_CURL></compound_statement></while_statement>
  <expression_statement><postfix_expression><IDENT>wait</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>
<function_definition><void>void</void> <direct_declarator><IDENT>move</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
     <expression_statement><postfix_expression><IDENT>fillRect</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><IDENT>x</IDENT>,<IDENT>y</IDENT> , <number>50</number>, <number>50</number></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><assignment_expression><IDENT>x</IDENT><ASSIGN>=</ASSIGN><additive_expression><IDENT>x</IDENT><PLUS>+</PLUS><IDENT>vx</IDENT></additive_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><assignment_expression><IDENT>y</IDENT><ASSIGN>=</ASSIGN><additive_expression><IDENT>y</IDENT><PLUS>+</PLUS><IDENT>vy</IDENT></additive_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>

<function_definition><void>void</void> <direct_declarator><IDENT>move2</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
     <expression_statement><postfix_expression><IDENT>fillRect</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><IDENT>x2</IDENT>,<IDENT>y2</IDENT> , <number>50</number>, <number>50</number></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><assignment_expression><IDENT>x2</IDENT><ASSIGN>=</ASSIGN><additive_expression><IDENT>x2</IDENT><PLUS>+</PLUS><IDENT>vx2</IDENT></additive_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><assignment_expression><IDENT>y2</IDENT><ASSIGN>=</ASSIGN><additive_expression><IDENT>y2</IDENT><PLUS>+</PLUS><IDENT>vy2</IDENT></additive_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>


</translation_unit></program>