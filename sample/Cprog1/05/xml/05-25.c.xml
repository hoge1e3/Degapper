<program>//#include"x.h"

<translation_unit><declaration><float>float</float> <init_declarator_list><direct_declarator><IDENT>x</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><number>2</number><RIGHT_BRACKET>]</RIGHT_BRACKET></direct_declarator>,<direct_declarator><IDENT>y</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><number>2</number><RIGHT_BRACKET>]</RIGHT_BRACKET></direct_declarator>,<direct_declarator><IDENT>vx</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><number>2</number><RIGHT_BRACKET>]</RIGHT_BRACKET></direct_declarator>,<direct_declarator><IDENT>vy</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><number>2</number><RIGHT_BRACKET>]</RIGHT_BRACKET></direct_declarator>,<direct_declarator><IDENT>r</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><number>2</number><RIGHT_BRACKET>]</RIGHT_BRACKET></direct_declarator>,<direct_declarator><IDENT>g</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><number>2</number><RIGHT_BRACKET>]</RIGHT_BRACKET></direct_declarator>,<direct_declarator><IDENT>b</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><number>2</number><RIGHT_BRACKET>]</RIGHT_BRACKET></direct_declarator></init_declarator_list><SEMICOLON>;</SEMICOLON></declaration>

<function_definition><void>void</void> <direct_declarator><IDENT>move</IDENT><LEFT_PAR>(</LEFT_PAR><parameter_declaration><int>int</int> <IDENT>i</IDENT></parameter_declaration><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
     <expression_statement><postfix_expression><IDENT>setColor</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><postfix_expression><IDENT>r</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression>,<postfix_expression><IDENT>g</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression>,<postfix_expression><IDENT>b</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><postfix_expression><IDENT>fillRect</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><postfix_expression><IDENT>x</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression>,<postfix_expression><IDENT>y</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression> , <number>50</number>, <number>50</number></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><assignment_expression><postfix_expression><IDENT>x</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><additive_expression><postfix_expression><IDENT>x</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><PLUS>+</PLUS><postfix_expression><IDENT>vx</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression></additive_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><assignment_expression><postfix_expression><IDENT>y</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><additive_expression><postfix_expression><IDENT>y</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><PLUS>+</PLUS><postfix_expression><IDENT>vy</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression></additive_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <if_statement><if>if</if> <LEFT_PAR>(</LEFT_PAR><relational_expression><postfix_expression><IDENT>x</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><GE>&gt;=</GE><number>200</number></relational_expression><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
       <expression_statement><assignment_expression><postfix_expression><IDENT>vx</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><prefix_expression><unary_operator>-</unary_operator><number>2</number></prefix_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <RIGHT_CURL>}</RIGHT_CURL></compound_statement></if_statement>
     <if_statement><if>if</if> <LEFT_PAR>(</LEFT_PAR><relational_expression><postfix_expression><IDENT>x</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><LE>&lt;=</LE><number>0</number></relational_expression><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
       <expression_statement><assignment_expression><postfix_expression><IDENT>vx</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><number>2</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <RIGHT_CURL>}</RIGHT_CURL></compound_statement></if_statement>
     <if_statement><if>if</if> <LEFT_PAR>(</LEFT_PAR><relational_expression><postfix_expression><IDENT>y</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><GE>&gt;=</GE><number>200</number></relational_expression><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
       <expression_statement><assignment_expression><postfix_expression><IDENT>vy</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><prefix_expression><unary_operator>-</unary_operator><number>2</number></prefix_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <RIGHT_CURL>}</RIGHT_CURL></compound_statement></if_statement>
     <if_statement><if>if</if> <LEFT_PAR>(</LEFT_PAR><relational_expression><postfix_expression><IDENT>y</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><LE>&lt;=</LE><number>0</number></relational_expression><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
       <expression_statement><assignment_expression><postfix_expression><IDENT>vy</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><number>2</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <RIGHT_CURL>}</RIGHT_CURL></compound_statement></if_statement>

<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>
<function_definition><void>void</void> <direct_declarator><IDENT>setup</IDENT><LEFT_PAR>(</LEFT_PAR><parameter_declaration><int>int</int> <IDENT>i</IDENT></parameter_declaration><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
     <expression_statement><assignment_expression><postfix_expression><IDENT>x</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><multiplicative_expression><postfix_expression><IDENT>rand</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression> <MOD>%</MOD> <number>200</number></multiplicative_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>  <expression_statement><assignment_expression><postfix_expression><IDENT>y</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><multiplicative_expression><postfix_expression><IDENT>rand</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression> <MOD>%</MOD> <number>200</number></multiplicative_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>  
     <expression_statement><assignment_expression><postfix_expression><IDENT>vx</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><number>2</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement> <expression_statement><assignment_expression><postfix_expression><IDENT>vy</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><number>1</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement> 
     <expression_statement><assignment_expression><postfix_expression><IDENT>r</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><multiplicative_expression><postfix_expression><IDENT>rand</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><MOD>%</MOD><number>255</number></multiplicative_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><assignment_expression><postfix_expression><IDENT>g</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><multiplicative_expression><postfix_expression><IDENT>rand</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><MOD>%</MOD><number>255</number></multiplicative_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><assignment_expression><postfix_expression><IDENT>b</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><multiplicative_expression><postfix_expression><IDENT>rand</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><MOD>%</MOD><number>255</number></multiplicative_expression></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>
<function_definition><void>void</void> <direct_declarator><IDENT>setupAll</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
  <declaration><int>int</int> <IDENT>i</IDENT><SEMICOLON>;</SEMICOLON></declaration>
  <for_statement><for>for</for> <LEFT_PAR>(</LEFT_PAR><assignment_expression><IDENT>i</IDENT><ASSIGN>=</ASSIGN><number>0</number></assignment_expression> <SEMICOLON>;</SEMICOLON> <relational_expression><IDENT>i</IDENT><LT>&lt;</LT><number>2</number></relational_expression><SEMICOLON>;</SEMICOLON> <postfix_expression><IDENT>i</IDENT>++</postfix_expression><RIGHT_PAR>)</RIGHT_PAR> <expression_statement><postfix_expression><IDENT>setup</IDENT><LEFT_PAR>(</LEFT_PAR><IDENT>i</IDENT><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement></for_statement>

<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>
<function_definition><void>void</void> <direct_declarator><IDENT>moveAll</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
   <declaration><int>int</int> <IDENT>i</IDENT><SEMICOLON>;</SEMICOLON></declaration>  <for_statement><for>for</for> <LEFT_PAR>(</LEFT_PAR><assignment_expression><IDENT>i</IDENT><ASSIGN>=</ASSIGN><number>0</number></assignment_expression><SEMICOLON>;</SEMICOLON> <relational_expression><IDENT>i</IDENT><LT>&lt;</LT><number>2</number></relational_expression><SEMICOLON>;</SEMICOLON> <postfix_expression><IDENT>i</IDENT>++</postfix_expression><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
       <expression_statement><postfix_expression><IDENT>move</IDENT><LEFT_PAR>(</LEFT_PAR><IDENT>i</IDENT><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <RIGHT_CURL>}</RIGHT_CURL></compound_statement></for_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>
<function_definition><int>int</int> <direct_declarator><IDENT>main</IDENT><LEFT_PAR>(</LEFT_PAR><void>void</void><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
  <declaration><int>int</int> <IDENT>i</IDENT><SEMICOLON>;</SEMICOLON></declaration>
  <expression_statement><postfix_expression><IDENT>setColor</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><number>255</number>,<number>0</number>,<number>0</number></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><postfix_expression><IDENT>srand</IDENT><LEFT_PAR>(</LEFT_PAR><postfix_expression><IDENT>time</IDENT><LEFT_PAR>(</LEFT_PAR><IDENT>NULL</IDENT><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <expression_statement><postfix_expression><IDENT>setupAll</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <while_statement><while>while</while> <LEFT_PAR>(</LEFT_PAR><number>1</number><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
     <expression_statement><postfix_expression><IDENT>clear</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><postfix_expression><IDENT>moveAll</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
     <expression_statement><postfix_expression><IDENT>update</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
  <RIGHT_CURL>}</RIGHT_CURL></compound_statement></while_statement>
  <expression_statement><postfix_expression><IDENT>wait</IDENT><LEFT_PAR>(</LEFT_PAR><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>



</translation_unit></program>