<program>//#include&lt;stdio.h&gt;

<translation_unit><function_definition><int>int</int> <direct_declarator><IDENT>main</IDENT><LEFT_PAR>(</LEFT_PAR><void>void</void><RIGHT_PAR>)</RIGHT_PAR></direct_declarator> <compound_statement><LEFT_CURL>{</LEFT_CURL>
   <declaration><int>int</int> <direct_declarator><IDENT>a</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><number>10</number><RIGHT_BRACKET>]</RIGHT_BRACKET></direct_declarator><SEMICOLON>;</SEMICOLON></declaration>
   <declaration><int>int</int> <IDENT>i</IDENT><SEMICOLON>;</SEMICOLON></declaration>
   <for_statement><for>for</for> <LEFT_PAR>(</LEFT_PAR><assignment_expression><IDENT>i</IDENT><ASSIGN>=</ASSIGN><number>0</number></assignment_expression> <SEMICOLON>;</SEMICOLON> <relational_expression><IDENT>i</IDENT><LT>&lt;</LT><number>10</number></relational_expression> <SEMICOLON>;</SEMICOLON> <postfix_expression><IDENT>i</IDENT>++</postfix_expression><RIGHT_PAR>)</RIGHT_PAR> <expression_statement><assignment_expression><postfix_expression><IDENT>a</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression><ASSIGN>=</ASSIGN><number>0</number></assignment_expression><SEMICOLON>;</SEMICOLON></expression_statement></for_statement>
   <while_statement><while>while</while><LEFT_PAR>(</LEFT_PAR><number>1</number><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
      <declaration><int>int</int> <IDENT>v</IDENT><SEMICOLON>;</SEMICOLON></declaration>
      <expression_statement><postfix_expression><IDENT>scanf</IDENT><LEFT_PAR>(</LEFT_PAR><argument_expression_list><literal>"%d"</literal>,<prefix_expression><unary_operator>&amp;</unary_operator><IDENT>v</IDENT></prefix_expression></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
      <if_statement><if>if</if> <LEFT_PAR>(</LEFT_PAR><LOG_OR_expression><relational_expression><IDENT>v</IDENT><LT>&lt;</LT><number>0</number></relational_expression> <LOG_OR>||</LOG_OR> <relational_expression><IDENT>v</IDENT><GT>&gt;</GT><number>9</number></relational_expression></LOG_OR_expression><RIGHT_PAR>)</RIGHT_PAR> <break_statement><break>break</break><SEMICOLON>;</SEMICOLON></break_statement></if_statement>
      <expression_statement><postfix_expression><postfix_expression><IDENT>a</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>v</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression>++</postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
   <RIGHT_CURL>}</RIGHT_CURL></compound_statement></while_statement>
   <for_statement><for>for</for> <LEFT_PAR>(</LEFT_PAR><assignment_expression><IDENT>i</IDENT><ASSIGN>=</ASSIGN><number>0</number></assignment_expression> <SEMICOLON>;</SEMICOLON> <relational_expression><IDENT>i</IDENT><LT>&lt;</LT><number>10</number></relational_expression> <SEMICOLON>;</SEMICOLON> <postfix_expression><IDENT>i</IDENT>++</postfix_expression><RIGHT_PAR>)</RIGHT_PAR> <compound_statement><LEFT_CURL>{</LEFT_CURL>
      <expression_statement><postfix_expression><IDENT>printf</IDENT> <LEFT_PAR>(</LEFT_PAR><argument_expression_list><literal>"%d は %d 回入力されました\n"</literal>, <IDENT>i</IDENT>, <postfix_expression><IDENT>a</IDENT><LEFT_BRACKET>[</LEFT_BRACKET><IDENT>i</IDENT><RIGHT_BRACKET>]</RIGHT_BRACKET></postfix_expression></argument_expression_list><RIGHT_PAR>)</RIGHT_PAR></postfix_expression><SEMICOLON>;</SEMICOLON></expression_statement>
   <RIGHT_CURL>}</RIGHT_CURL></compound_statement></for_statement>
<RIGHT_CURL>}</RIGHT_CURL></compound_statement></function_definition>


</translation_unit></program>